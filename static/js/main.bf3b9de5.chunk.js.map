{"version":3,"sources":["components/Message.js","components/Loader.js","utils/API.js","components/Login.js","components/PostEditForm.js","components/PostDetails.js","utils/formatDate.js","components/Comment.js","components/CommentManager.js","components/Post.js","components/DeletePopUp.js","components/PostList.js","components/Navbar.js","components/CreateForm.js","hooks/useToken.js","components/App.js","index.js"],"names":["Message","props","text","success","backgroundColor","textColor","className","Loader","API","login","username","password","a","fetch","method","body","JSON","stringify","headers","raw","json","getMyPosts","Authorization","localStorage","getItem","createPost","title","published","deletePost","postId","editPost","data","deleteComment","Login","useState","setUsername","setPassword","errorMessage","setErrorMessage","isLoading","setIsLoading","onClickLogin","res","status","jwt","token","setToken","type","placeholder","value","onChange","e","currentTarget","onClick","disabled","PostEditForm","post","setPostTitle","setPostBody","toggleMode","titleInput","setTitleInput","bodyInput","setBodyInput","message","popUp","setPopUp","clearPopUp","onClickSave","_id","Fragment","PostDetails","postTitle","postBody","showDeletePopUp","target","rel","href","length","slice","formatDate","timestamp","ts","Date","getMonth","getDate","getFullYear","Comment","comment","removeComment","deleteMode","setDeleteMode","onClickDelete","normalMarkup","name","deleteMarkup","CommentManager","comments","hideManager","map","reverse","Post","editMode","setEditMode","postComments","setPostComments","commentManager","setCommentManager","toggleCommentMananger","id","filter","com","class","DeletePopUp","hidePopUp","posts","setPosts","PostList","show","deletePopUp","setDeletePopUp","useEffect","Navbar","activeClassName","inactiveClassName","to","exact","CreateForm","popUpText","setPopUpText","popUpStatus","setPopUpStatus","onClickPost","useToken","setItem","App","basename","process","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf3b9de5.chunk.js","sourcesContent":["function Message(props) {\r\n  const { text, success } = props;\r\n  const backgroundColor = success ? 'bg-green-100' : 'bg-red-100';\r\n  const textColor = success ? 'text-green-900' : 'text-red-900';\r\n\r\n  return (\r\n    <div className={`p-5 w-full ${backgroundColor} rounded mb-10 wobble`}>\r\n      <h1 className={`${textColor} text-sm text-center`}>{text}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","function Loader() {\r\n  return (\r\n    <div className=\"lds-ring\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","const login = async (username, password) => {\r\n  const raw = await fetch('https://odingblogapi.herokuapp.com/api/me/login', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ username, password }),\r\n    headers: {\r\n      'Content-type': 'application/json; charset=UTF-8',\r\n    },\r\n  });\r\n\r\n  const json = await raw.json();\r\n\r\n  return json;\r\n};\r\n\r\nconst getMyPosts = async () => {\r\n  const raw = await fetch('https://odingblogapi.herokuapp.com/api/me/posts', {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-type': 'application/json; charset=UTF-8',\r\n      Authorization: `Bearer ${localStorage.getItem('authToken')}`,\r\n    },\r\n  });\r\n\r\n  const json = await raw.json();\r\n\r\n  return json;\r\n};\r\n\r\nconst createPost = async (title, body) => {\r\n  const raw = await fetch('https://odingblogapi.herokuapp.com/api/posts', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ title, body, published: true }),\r\n    headers: {\r\n      'Content-type': 'application/json; charset=UTF-8',\r\n      Authorization: `Bearer ${localStorage.getItem('authToken')}`,\r\n    },\r\n  });\r\n\r\n  const json = await raw.json();\r\n\r\n  return json;\r\n};\r\n\r\nconst deletePost = async (postId) => {\r\n  const raw = await fetch(\r\n    `https://odingblogapi.herokuapp.com/api/posts/${postId}`,\r\n    {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${localStorage.getItem('authToken')}`,\r\n      },\r\n    }\r\n  );\r\n\r\n  const json = await raw.json();\r\n\r\n  return json;\r\n};\r\n\r\nconst editPost = async (postId, data) => {\r\n  const raw = await fetch(\r\n    `https://odingblogapi.herokuapp.com/api/posts/${postId}`,\r\n    {\r\n      method: 'PUT',\r\n      body: JSON.stringify({\r\n        title: data.title,\r\n        body: data.body,\r\n        published: true,\r\n      }),\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${localStorage.getItem('authToken')}`,\r\n      },\r\n    }\r\n  );\r\n\r\n  const json = await raw.json();\r\n\r\n  return json;\r\n};\r\n\r\nconst deleteComment = async (postId) => {\r\n  const raw = await fetch(\r\n    `https://odingblogapi.herokuapp.com/api/comments/${postId}`,\r\n    {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n        Authorization: `Bearer ${localStorage.getItem('authToken')}`,\r\n      },\r\n    }\r\n  );\r\n\r\n  const json = await raw.json();\r\n\r\n  return json;\r\n};\r\n\r\nconst API = {\r\n  login,\r\n  getMyPosts,\r\n  createPost,\r\n  deletePost,\r\n  editPost,\r\n  deleteComment,\r\n};\r\n\r\nexport default API;\r\n","import { useState } from 'react';\r\nimport Message from './Message';\r\nimport Loader from './Loader';\r\nimport API from '../utils/API';\r\n\r\nfunction Login(props) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onClickLogin = async () => {\r\n    setErrorMessage('');\r\n    if (username && password) {\r\n      setIsLoading(true);\r\n      const res = await API.login(username, password);\r\n\r\n      if (res.status === 'failure') {\r\n        setIsLoading(false);\r\n        setErrorMessage('Sorry, please enter valid login information!');\r\n      } else {\r\n        const jwt = res.data.token;\r\n        props.setToken(jwt);\r\n      }\r\n    } else {\r\n      setErrorMessage('Sorry, you must fill out both fields first!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full h-screen bg-blue-400\">\r\n      <div className=\"login-form max-w-sm w-11/12\">\r\n        <div className={`p-5 w-full bg-yellow-100 rounded mb-10 wobble`}>\r\n          <h1 className={`text-yellow-900 text-sm mb-3`}>\r\n            You can test this app with the guest account\r\n          </h1>\r\n\r\n          <p className=\"text-yellow-900 text-sm\">\r\n            Username:\r\n            <span className=\" text-yellow-900 font-bold text-lg\"> Guest</span>\r\n          </p>\r\n          <p className=\"text-yellow-900 text-sm\">\r\n            Password:\r\n            <span className=\" text-yellow-900 font-bold text-lg\">\r\n              {' '}\r\n              password\r\n            </span>\r\n          </p>\r\n        </div>\r\n        {errorMessage && <Message text={errorMessage} success={false} />}\r\n        <div className=\"inline-block p-10 w-full shadow-lg rounded bg-white \">\r\n          {isLoading ? (\r\n            <Loader />\r\n          ) : (\r\n            <h1 className=\"text-center text-blue-500 text-5xl mb-5\">\r\n              <i className=\"fas fa-lock\"></i>\r\n            </h1>\r\n          )}\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.currentTarget.value)}\r\n            className=\"p-3 bg-gray-100 block rounded w-full mb-5 text-gray-900 placeholder-gray-600\"\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.currentTarget.value)}\r\n            className=\"p-3 bg-gray-100 block rounded w-full mb-5 text-gray-900 placeholder-gray-600\"\r\n          />\r\n          <button\r\n            onClick={onClickLogin}\r\n            className={`${\r\n              isLoading\r\n                ? 'bg-blue-200 cursor-default '\r\n                : 'bg-blue-500 hover:bg-blue-600'\r\n            }  transition duration-200 font-bold p-3 rounded w-full text-white`}\r\n            disabled={isLoading}\r\n          >\r\n            Login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport API from '../utils/API';\r\nimport Loader from './Loader';\r\nimport Message from './Message';\r\n\r\nfunction PostEditForm(props) {\r\n  const { post, setPostTitle, setPostBody, toggleMode } = props;\r\n\r\n  const [titleInput, setTitleInput] = useState(post.title);\r\n  const [bodyInput, setBodyInput] = useState(post.body);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [popUp, setPopUp] = useState({ message: null, success: null });\r\n\r\n  const clearPopUp = () => {\r\n    setPopUp({ message: null, success: null });\r\n  };\r\n\r\n  const onClickSave = async () => {\r\n    clearPopUp();\r\n    setIsLoading(true);\r\n    const json = await API.editPost(post._id, {\r\n      title: titleInput,\r\n      body: bodyInput,\r\n    });\r\n    setIsLoading(false);\r\n\r\n    if (json.status === 'failure') {\r\n      setPopUp({\r\n        message: 'Sorry, there was a problem updating your post!',\r\n        success: false,\r\n      });\r\n    } else {\r\n      setPostTitle(titleInput);\r\n      setPostBody(bodyInput);\r\n\r\n      setPopUp({\r\n        message: 'You have succesfully edited your post!',\r\n        success: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const disabledBtn = 'bg-gray-100 text-gray-400 cursor-default';\r\n  const activeBtn =\r\n    'text-green-900 bg-green-100 hover:bg-green-200 transition duration-200';\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {popUp.message && (\r\n        <Message text={popUp.message} success={popUp.success} />\r\n      )}\r\n      {isLoading && (\r\n        <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\r\n          <Loader />\r\n        </div>\r\n      )}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        onChange={(e) => {\r\n          setTitleInput(e.currentTarget.value);\r\n        }}\r\n        value={titleInput}\r\n        className=\"text-md font-bold mb-3 p-3 rounded w-full\"\r\n      />\r\n      <textarea\r\n        placeholder=\"Title\"\r\n        onChange={(e) => {\r\n          setBodyInput(e.currentTarget.value);\r\n        }}\r\n        value={bodyInput}\r\n        className=\"text-gray-400 p-3 rounded w-full resize-none h-64\"\r\n      />\r\n      <div className=\"mt-3\">\r\n        <button\r\n          disabled={isLoading}\r\n          onClick={() => {\r\n            clearPopUp();\r\n            toggleMode();\r\n          }}\r\n          className=\"hover:cursor-pointer mr-3 px-4 py-2 border text-gray-500 border-gray-200 rounded hover:bg-blue-100 transition duration-200\"\r\n        >\r\n          Cancel\r\n        </button>\r\n\r\n        <button\r\n          disabled={isLoading}\r\n          onClick={onClickSave}\r\n          className={`${\r\n            isLoading ? disabledBtn : activeBtn\r\n          } px-4 py-2 rounded font-bold inline-block shadow`}\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PostEditForm;\r\n","import React from 'react';\r\n\r\nfunction PostDetails(props) {\r\n  const { post, postTitle, postBody, toggleMode, showDeletePopUp } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <a\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n        href={`https://abojo.github.io/BlogClient/posts/${post._id}`}\r\n        className=\"text-2xl font-bold mb-3 hover:opacity-60 transition duration-200\"\r\n      >\r\n        {postTitle}\r\n        <i className=\"text-lg text-blue-500 ml-3 fas fa-external-link-alt\"></i>\r\n      </a>\r\n      <p className=\"text-gray-400\">\r\n        {`${postBody.length > 200 ? postBody.slice(0, 200) : postBody}...`}\r\n      </p>\r\n\r\n      <div className=\"mt-3\">\r\n        <button\r\n          onClick={toggleMode}\r\n          className=\"text-yellow-900 bg-yellow-100 hover:bg-yellow-200 transition duration-200 px-4 py-2 rounded font-bold inline-block shadow\"\r\n        >\r\n          Edit\r\n        </button>\r\n\r\n        <button\r\n          onClick={() => showDeletePopUp(post._id, post.title)}\r\n          className=\"hover:cursor-pointer ml-3 px-4 py-2 border text-gray-500 border-gray-200 rounded hover:bg-blue-100 transition duration-200\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PostDetails;\r\n","const formatDate = (timestamp) => {\r\n  const ts = new Date(timestamp);\r\n  return `${ts.getMonth() + 1}/${ts.getDate()}/${ts.getFullYear()}`;\r\n};\r\n\r\nexport default formatDate;\r\n","import formatDate from '../utils/formatDate';\r\nimport React, { useState } from 'react';\r\nimport API from '../utils/API';\r\nimport Loader from './Loader';\r\n\r\nfunction Comment(props) {\r\n  const { comment, removeComment, setPopUp } = props;\r\n  const [deleteMode, setDeleteMode] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const toggleMode = () => {\r\n    setDeleteMode(!deleteMode);\r\n  };\r\n\r\n  const onClickDelete = async () => {\r\n    //clear pop up at start of a new delete so the new popup gets the wobble animation\r\n    setPopUp({ message: null, status: null });\r\n\r\n    setIsLoading(true);\r\n    const json = await API.deleteComment(comment._id);\r\n    setIsLoading(false);\r\n\r\n    if (json.status === 'failure') {\r\n      setPopUp({\r\n        message: 'Sorry, there was a problem deleting the comment!',\r\n        success: true,\r\n      });\r\n      toggleMode();\r\n    } else {\r\n      removeComment(comment._id);\r\n      setPopUp({\r\n        message: 'You have succesfully removed the comment!',\r\n        success: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const normalMarkup = (\r\n    <React.Fragment>\r\n      <h1 className=\"font-bold text-sm mb-1\">{comment.name}</h1>\r\n      <p className=\"text-sm text-gray-400 mb-1\">\r\n        {formatDate(comment.timestamp)}\r\n      </p>\r\n      <p className=\"text-sm text-gray-500 mb-1\">{comment.body}</p>\r\n      <button\r\n        onClick={toggleMode}\r\n        className=\"text-red-500 hover:text-red-800 transition duration-200 font-bold text-sm\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n\r\n  const deleteMarkup = (\r\n    <React.Fragment>\r\n      <h1 className=\"mb-3 font-bold\">\r\n        Are you sure you want to delete this comment?\r\n      </h1>\r\n\r\n      <button\r\n        onClick={toggleMode}\r\n        className=\"hover:cursor-pointer mr-3 p-2 border text-gray-500 border-gray-200 rounded hover:bg-gray-100 transition duration-200 text-sm\"\r\n      >\r\n        Close\r\n      </button>\r\n      <button\r\n        onClick={onClickDelete}\r\n        className={`p-2 font-bold rounded shadow bg-red-100 text-red-900 hover:bg-red-200 transition duration-200 text-sm`}\r\n      >\r\n        Delete\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <div className=\"mb-3 border-t border-gray-300 pt-3\">\r\n      {isLoading && (\r\n        <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\r\n          <Loader />\r\n        </div>\r\n      )}\r\n      {deleteMode ? deleteMarkup : normalMarkup}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n","import { useState } from 'react';\r\nimport Comment from './Comment';\r\nimport Message from './Message';\r\n\r\nfunction CommentManager(props) {\r\n  const { comments, hideManager, removeComment } = props;\r\n  const [popUp, setPopUp] = useState({ message: null, success: null });\r\n\r\n  return (\r\n    <div className=\"fixed h-screen w-screen bg-opacity-40 bg-black top-0 left-0 z-10\">\r\n      <div className=\"rounded p-6 max-w-xl w-11/12 bg-white absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\r\n        {popUp.message && (\r\n          <Message text={popUp.message} success={popUp.success} />\r\n        )}\r\n\r\n        <button className=\"mb-3\" onClick={hideManager}>\r\n          <i className=\"fas fa-arrow-left text-blue-500 text-2xl\"></i>\r\n        </button>\r\n        <h1 className=\"font-bold text-md mb-3\">Comments ({comments.length})</h1>\r\n\r\n        <div className=\"overflow-y-auto max-h-96\">\r\n          {comments\r\n            .map((comment) => (\r\n              <Comment\r\n                removeComment={removeComment}\r\n                comment={comment}\r\n                key={comment._id}\r\n                setPopUp={setPopUp}\r\n              />\r\n            ))\r\n            .reverse()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentManager;\r\n","import React, { useState } from 'react';\r\nimport PostEditForm from './PostEditForm';\r\nimport PostDetails from './PostDetails';\r\nimport CommentManager from './CommentManager';\r\n\r\nfunction Post(props) {\r\n  const { post, showDeletePopUp } = props;\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [postTitle, setPostTitle] = useState(post.title);\r\n  const [postBody, setPostBody] = useState(post.body);\r\n  const [postComments, setPostComments] = useState(post.comments);\r\n  const [commentManager, setCommentManager] = useState(false);\r\n\r\n  const toggleMode = () => {\r\n    setEditMode(!editMode);\r\n  };\r\n\r\n  const toggleCommentMananger = () => {\r\n    setCommentManager(!commentManager);\r\n  };\r\n\r\n  const removeComment = (id) => {\r\n    setPostComments(postComments.filter((com) => com._id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-10 p-8 bg-blue-50 rounded relative shadow-md\">\r\n      {commentManager && (\r\n        <CommentManager\r\n          comments={postComments}\r\n          hideManager={toggleCommentMananger}\r\n          removeComment={removeComment}\r\n        />\r\n      )}\r\n      <div className=\"bg-white inline-block p-3 rounded-full shadow-md text-md absolute bubble\">\r\n        <h1 className=\"text-blue-500\">\r\n          <i className=\"fas fa-comment mr-1\"></i>\r\n          {postComments.length}\r\n          <i\r\n            class=\"ml-2 fas fa-external-link-alt text-blue-200 text-sm hover:text-blue-400 transition duration-200 cursor-pointer\"\r\n            onClick={toggleCommentMananger}\r\n          ></i>\r\n        </h1>\r\n      </div>\r\n      {editMode ? (\r\n        <PostEditForm\r\n          post={post}\r\n          setPostTitle={setPostTitle}\r\n          setPostBody={setPostBody}\r\n          toggleMode={toggleMode}\r\n        />\r\n      ) : (\r\n        <PostDetails\r\n          post={post}\r\n          postTitle={postTitle}\r\n          postBody={postBody}\r\n          toggleMode={toggleMode}\r\n          showDeletePopUp={showDeletePopUp}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import API from '../utils/API';\r\nimport Loader from './Loader';\r\nimport Message from './Message';\r\nimport { useState } from 'react';\r\n\r\nfunction DeletePopUp(props) {\r\n  const { id, title, hidePopUp, posts, setPosts } = props;\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [popUp, setPopUp] = useState({ message: null, success: null });\r\n\r\n  const onClickDelete = async () => {\r\n    setIsLoading(true);\r\n    const json = await API.deletePost(id);\r\n    setIsLoading(false);\r\n\r\n    if (json.status === 'failure') {\r\n      setPopUp({\r\n        message: 'Sorry, there was a problem deleting your post!',\r\n        success: false,\r\n      });\r\n    } else {\r\n      setPosts(posts.filter((post) => post._id !== id));\r\n      setPopUp({\r\n        message: 'Your post has been deleted!',\r\n        success: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const disabledBtn = 'bg-gray-100 text-gray-400 cursor-default';\r\n  const activeBtn =\r\n    'bg-red-100 text-red-900 hover:bg-red-200 transition duration-200';\r\n\r\n  return (\r\n    <div className=\"fixed h-screen w-screen bg-opacity-40 bg-black top-0 left-0 z-10\">\r\n      <div className=\"rounded p-5 max-w-3xl w-11/12 bg-white absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\r\n        {isLoading && (\r\n          <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\r\n            <Loader />\r\n          </div>\r\n        )}\r\n        {popUp.message ? (\r\n          <Message text={popUp.message} success={popUp.success} />\r\n        ) : (\r\n          <h1 className=\"text-xl mb-5 border-gray-200 border-b pb-5\">\r\n            Are you sure you want to delete {title}?\r\n          </h1>\r\n        )}\r\n        <div className=\"ml-auto block w-max\t\">\r\n          <button\r\n            onClick={hidePopUp}\r\n            className=\"hover:cursor-pointer mr-3 p-3 border text-gray-500 border-gray-200 rounded hover:bg-gray-100 transition duration-200\"\r\n          >\r\n            Close\r\n          </button>\r\n          <button\r\n            onClick={onClickDelete}\r\n            className={`${\r\n              popUp.success ? disabledBtn : activeBtn\r\n            } p-3 font-bold rounded shadow`}\r\n            disabled={popUp.success}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeletePopUp;\r\n","import API from '../utils/API';\r\nimport { useState, useEffect } from 'react';\r\nimport Post from './Post';\r\nimport Loader from './Loader';\r\nimport DeletePopUp from './DeletePopUp';\r\n\r\nfunction PostList(props) {\r\n  const [posts, setPosts] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [deletePopUp, setDeletePopUp] = useState({\r\n    show: false,\r\n    id: null,\r\n    title: null,\r\n  });\r\n\r\n  const showDeletePopUp = (id, title) => {\r\n    setDeletePopUp({ show: true, id, title });\r\n  };\r\n\r\n  const hideDeletePopUp = () => {\r\n    setDeletePopUp({ show: false, id: null, title: null });\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsLoading(true);\r\n      const json = await API.getMyPosts();\r\n      setIsLoading(false);\r\n\r\n      if (json.data.message === 'Sorry, please login again!') {\r\n        props.setToken('');\r\n      } else {\r\n        setPosts(json.data.posts);\r\n      }\r\n    })();\r\n  }, [props]);\r\n\r\n  return (\r\n    <div className=\"px-5 max-w-3xl w-11/12 mx-auto \">\r\n      {deletePopUp.show && (\r\n        <DeletePopUp\r\n          id={deletePopUp.id}\r\n          title={deletePopUp.title}\r\n          hidePopUp={hideDeletePopUp}\r\n          posts={posts}\r\n          setPosts={setPosts}\r\n        />\r\n      )}\r\n      {isLoading && <Loader />}\r\n      {posts && !posts.length && (\r\n        <h1 className=\"text-center text-3xl font-bold\">You have no posts!</h1>\r\n      )}\r\n      {posts &&\r\n        posts\r\n          .map((post) => (\r\n            <Post\r\n              post={post}\r\n              showDeletePopUp={showDeletePopUp}\r\n              key={post._id}\r\n            />\r\n          ))\r\n          .reverse()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostList;\r\n","import { NavLink, Link } from 'react-router-dom';\r\nfunction Navbar(props) {\r\n  const activeClassName =\r\n    'font-bold text-blue-500 pb-1 border-blue-500 border-b-2';\r\n  const inactiveClassName = 'hover:text-blue-400 transition duration-200';\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"bg-blue-500 px-5 py-3 flex justify-between items-baseline mb-10\">\r\n        <Link className=\"text-xl font-bold text-white\" to=\"/\">\r\n          Blog Admin\r\n        </Link>\r\n        <button\r\n          onClick={() => {\r\n            props.setToken('');\r\n          }}\r\n          className=\"bg-white hover:bg-blue-100 transition duration-200 rounded text-white p-2 text-md text-blue-500 font-bold\"\r\n        >\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"text-lg text-gray-500 mb-10 block text-center\">\r\n        <NavLink\r\n          exact\r\n          to=\"/\"\r\n          className={`${inactiveClassName} mr-12`}\r\n          activeClassName={activeClassName}\r\n        >\r\n          My Posts\r\n        </NavLink>\r\n        <NavLink\r\n          exact\r\n          to=\"/create\"\r\n          className={inactiveClassName}\r\n          activeClassName={activeClassName}\r\n        >\r\n          Create Post\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import { useState } from 'react';\r\nimport API from '../utils/API';\r\nimport Message from './Message';\r\nimport Loader from './Loader';\r\n\r\nfunction CreateForm(props) {\r\n  const { postTitle, setPostTitle, postBody, setPostBody } = props;\r\n  const [popUpText, setPopUpText] = useState('');\r\n  const [popUpStatus, setPopUpStatus] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const clearFields = () => {\r\n    setPostTitle('');\r\n    setPostBody('');\r\n  };\r\n\r\n  const setPopUp = (text, success) => {\r\n    setPopUpText(text);\r\n    setPopUpStatus(success);\r\n  };\r\n\r\n  const onClickPost = async () => {\r\n    if (postTitle && postBody) {\r\n      setIsLoading(true);\r\n      const json = await API.createPost(postTitle, postBody);\r\n      setIsLoading(false);\r\n\r\n      if (json.status === 'failure') {\r\n        setPopUp('Sorry, there was a problem creating your post!', false);\r\n      } else {\r\n        setPopUp('Your post was successfully created!', true);\r\n        clearFields();\r\n      }\r\n    } else {\r\n      setPopUp('Sorry, you must fill out both fields!', false);\r\n    }\r\n  };\r\n\r\n  const activeBtnCss = 'bg-green-100 text-green-900 hover:bg-green-200';\r\n  const disabledBtnCss = 'bg-gray-100 text-gray-300 cursor-default';\r\n\r\n  return (\r\n    <div className=\"px-5 max-w-3xl w-11/12 mx-auto \">\r\n      {isLoading && <Loader />}\r\n      {popUpText && <Message text={popUpText} success={popUpStatus} />}\r\n      <input\r\n        placeholder=\"Title\"\r\n        className=\"p-4 bg-gray-100 block rounded w-full mb-5 text-gray-900 placeholder-gray-600 shadow\"\r\n        value={postTitle}\r\n        onChange={(e) => {\r\n          setPostTitle(e.currentTarget.value);\r\n        }}\r\n      />\r\n      <textarea\r\n        placeholder=\"Body\"\r\n        className=\"p-4 bg-gray-100 block rounded w-full mb-5 text-gray-900 placeholder-gray-600 resize-none h-64 shadow\"\r\n        value={postBody}\r\n        onChange={(e) => {\r\n          setPostBody(e.currentTarget.value);\r\n        }}\r\n      />\r\n      <button\r\n        className={`${\r\n          isLoading ? disabledBtnCss : activeBtnCss\r\n        } w-full p-4 font-bold rounded text-xl transition duration-200 shadow`}\r\n        onClick={onClickPost}\r\n        disabled={isLoading}\r\n      >\r\n        Create Post\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateForm;\r\n","import { useState } from 'react';\r\n\r\nfunction useToken() {\r\n  const [token, setToken] = useState(localStorage.getItem('authToken'));\r\n\r\n  const saveToken = (token) => {\r\n    localStorage.setItem('authToken', token);\r\n    setToken(token);\r\n  };\r\n\r\n  return { token, setToken: saveToken };\r\n}\r\n\r\nexport default useToken;\r\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './Login';\nimport PostList from './PostList';\nimport Navbar from './Navbar';\nimport CreateForm from './CreateForm';\nimport useToken from '../hooks/useToken';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [postTitle, setPostTitle] = useState('');\n  const [postBody, setPostBody] = useState('');\n  const { token, setToken } = useToken();\n\n  if (!token) return <Login setToken={setToken} />;\n\n  return (\n    <React.Fragment>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Navbar setToken={setToken} />\n        <Switch>\n          <Route exact path=\"/\">\n            <PostList setToken={setToken} />\n          </Route>\n          <Route exact path=\"/create\">\n            <CreateForm\n              postTitle={postTitle}\n              setPostTitle={setPostTitle}\n              postBody={postBody}\n              setPostBody={setPostBody}\n            />\n          </Route>\n        </Switch>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './css/styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}